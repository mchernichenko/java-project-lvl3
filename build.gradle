plugins {
    id 'application'
    // проверка наличия новых версий библиотек и плагинов используемых в проекте ./gradlew dependencyUpdates
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'checkstyle'
    id 'jacoco'
    id 'com.adarshr.test-logger' version '3.0.0'
    //  id "io.freefair.lombok" version "6.1.0"
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // test
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.assertj:assertj-core:3.20.2'
   // testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0-M1'
   // testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.0-M1'

    // picocli
    implementation 'info.picocli:picocli:4.6.1'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.1'

    // json+yml
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.4'

    // code generation (can use plugin)
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

// целевая версия Java под которую компилируется проект
compileJava {
    options.release = 16
}

application {
    mainClass = 'hexlet.code.App'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled true // coveralls plugin depends on xml format report
        html.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['hexlet/code/App.class'
                    ]
            )
        }))
    }
}

checkstyle {
    toolVersion '8.41'
}

testlogger {
    showStandardStreams = true
}

